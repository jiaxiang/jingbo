#--------------------------------------------------------------------
# Log level could be OFF, FATAL, ERROR, WARN, INFO, DEBUG, or ALL.
#--------------------------------------------------------------------
# Sample usage code:
# import org.apache.commons.logging.LogFactory;
# import org.apache.commons.logging.Log;
# private static Log logger = LogFactory.getLog(Sample.class);
# logger.info("log message");

#--------------------------------------------------------------------
# configure the log level as well as necessary appenders
#--------------------------------------------------------------------
log4j.rootLogger=info, stdout, textLog

#--------------------------------------------------------------------
# log level setting for individual packages
#--------------------------------------------------------------------
#log4j.logger.com.ibatis = DEBUG 
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource = DEBUG 
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner = DEBUG 
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate = DEBUG 

#log4j.logger.java.sql = DEBUG 
#log4j.logger.java.sql.Connection = DEBUG 
#log4j.logger.java.sql.Statement = DEBUG 
#log4j.logger.java.sql.PreparedStatement = DEBUG, fileout 
#log4j.logger.java.sql.ResultSet = DEBUG

#log4j.logger.org.springframework=INFO
#log4j.logger.org.apache.velocity=DEBUG
#log4j.logger.uk.ltd.getahead.dwr=INFO

log4j.logger.com.danga.MemCached.MemCachedClient=ERROR

#--------------------------------------------------------------------
# used to specify log output path
#--------------------------------------------------------------------
web.root=${WEB_ROOT_PATH}

#--------------------------------------------------------------------
# log appenders (stdout, textLog, htmlLog, xmlLog, and socketLog)
#--------------------------------------------------------------------

# stdout appender
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %p %c %x - %m%n

# text format log appender
log4j.appender.textLog=org.apache.log4j.RollingFileAppender
log4j.appender.textLog.File=${web.root}/logs/common_log.log
log4j.appender.textLog.MaxFileSize=1MB
log4j.appender.textLog.MaxBackupIndex=10
log4j.appender.textLog.layout=org.apache.log4j.PatternLayout
log4j.appender.textLog.layout.ConversionPattern=%d{ISO8601} [%t] %p %c %x - %m%n

# HTML format log appender
log4j.appender.htmlLog=org.apache.log4j.RollingFileAppender
log4j.appender.htmlLog.File=${web.root}/logs/common_log.htm
log4j.appender.htmlLog.MaxFileSize=1MB
log4j.appender.htmlLog.MaxBackupIndex=10
log4j.appender.htmlLog.layout=org.apache.log4j.HTMLLayout

# XML format log appender
log4j.appender.xmlLog=org.apache.log4j.RollingFileAppender
log4j.appender.xmlLog.File=${web.root}/logs/common_log.xml
log4j.appender.xmlLog.MaxFileSize=1MB
log4j.appender.xmlLog.MaxBackupIndex=10
log4j.appender.xmlLog.layout=org.apache.log4j.xml.XMLLayout

# Remote Socket logging appender
log4j.appender.socketLog=org.apache.log4j.net.SocketAppender
log4j.appender.socketLog.RemoteHost=localhost
log4j.appender.socketLog.Port=4445
log4j.appender.socketLog.LocationInfo=true
